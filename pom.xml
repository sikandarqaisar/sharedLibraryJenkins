<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>in.javahome</groupId>
	<artifactId>myweb</artifactId>
	<packaging>war</packaging>
	<version>0.0.7-SNAPSHOT</version>
	<name>my-app</name>
	<url>http://maven.apache.org</url>	
	<!--  This format is used by SonarQube. If you need another format see "buildnumber-maven-plugin" -->
	<maven.build.timestamp.format>MM.yyyy</maven.build.timestamp.format>
	<yearMonth>${maven.build.timestamp}</yearMonth>    
	<!-- ************************-->
	<!-- Sonar/Reporting settings -->
	<!-- ************************-->
	<!-- Sonar/Jacoco integration. Note that these properties need to be defined outside the "coverage" profile
	because we want to be to able to execute mvn sonar:sonar without passing a profile -->
	<!-- Tells Sonar to use jacoco for coverage results -->
	<sonar.projectKey>MyProjectKey</sonar.projectKey>
	<sonar.projectName>My Project</sonar.projectName>
	 <sonar.projectVersion>${yearMonth}</sonar.projectVersion>
	<sonar.language>java</sonar.language>
	<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
	<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
	<!-- Jacoco version to use -->
	<jacoco.version>0.7.2.201409121644</jacoco.version>
	<!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test -->
	<sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
	<!-- Don't let Sonar execute tests. We will ask it to Maven 'sonar.dynamicAnalysis' is deprecated since version 4.3 and should no longer be used. -->
	<!-- <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis> -->
	<!-- The system property jacoco.outputDir needs to be override on the command line
	    with an absolute path if you want to merge results from all modules.
	    Example in a Jenkisn build where ${WORKSPACE} is defined and your project in the root directory of the workspace :
	    mvn clean install -Prun-its,coverage -Djacoco.outputDir=${WORKSPACE}/target
	    Note that unfortunately using the following does not work because of
	    http://jira.codehaus.org/browse/SONAR-3427:
	<jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir>
	-->
	<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
	<!-- Jacoco output file for UTs -->
	<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
	<!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->
	<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
	<!-- Jacoco output file for ITs -->
	<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
	<!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->
	<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
	<!-- <sonar.junit.reportsPath>${project.build.directory}/surefire-reports/</sonar.junit.reportsPath> -->
	<!-- <sonar.tests>src/test/java</sonar.tests> -->
	<!-- === END of Sonar/Reporting settings === -->
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
		<dependency>
		    <groupId>org.jacoco</groupId>
		    <artifactId>jacoco-maven-plugin</artifactId>
		    <version>0.8.5</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>3.7</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
 		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	
	</dependencies>	
	<build>
	    <plugins>
		<plugin>
		    <groupId>org.jacoco</groupId>
		    <artifactId>jacoco-maven-plugin</artifactId>
		    <version>0.8.0</version>
		    <executions>
			<execution>
			    <id>default-prepare-agent</id>
			    <goals>
				<goal>prepare-agent</goal>
			    </goals>
			</execution>
			<execution>
			    <id>default-report</id>
			    <phase>prepare-package</phase>
			    <goals>
				<goal>report</goal>
			    </goals>
			</execution>
		    </executions>
		</plugin>
	    </plugins>
	</build>
</project>
